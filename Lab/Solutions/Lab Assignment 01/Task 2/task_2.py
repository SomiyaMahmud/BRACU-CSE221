# -*- coding: utf-8 -*-
"""Task_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GllCwx-7Pspq-DcTeJZEaDbYXOJ9b_4j
"""

inp = open("/content/drive/MyDrive/CSE221 Lab(Spring 24)/Lab 01/input 2.txt", "r")
out = open("/content/drive/MyDrive/CSE221 Lab(Spring 24)/Lab 01/output 2.txt", "w")
N = int(inp.readline())
temp = [int(i) for i in inp.readline().split()]

for i in range(N):
        flag = False
        for j in range(len(temp)-i-1):
            if temp[j] > temp[j+1]:
                temp[j], temp[j+1] = temp[j+1], temp[j]
                flag = True

        if flag is not True:
          break
for k in range(N):
    out.write(f"{(temp[k])} ")


inp.close()
out.close()

#To get the time complexity O(n), just need to introduce a flag.
#After the first iteration if there is no change in the list, the flag will also not change.
#If the flag is not change, then the loop is not contitued.